version: '3.7'

services:

  amine-api:
    build:
      context: ./amine-api-app
      dockerfile: Dockerfile
    container_name: amine-api
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: "host.docker.internal"  # Allows access via localhost on Mac/Windows on linux use RABBITMQ_HOST: "localhost"
      RABBITMQ_PORT: "5672"
      RABBITMQ_USERNAME: "root"
      RABBITMQ_PASSWORD: "root"
      RABBIT_CONNECTION: "true"
    networks:
      - services-net

  authentication-app:
    build:
      context: ./authentication-app
      dockerfile: Dockerfile
    container_name: authentication-app
    ports:
      - "8081:8081"
    depends_on:
      rabbitmq:
        condition: service_healthy
      amine-api:
        condition: service_started
    environment:
      RABBITMQ_HOST: "host.docker.internal"  # Allows access via localhost on Mac/Windows on linux use RABBITMQ_HOST: "localhost"
      RABBITMQ_PORT: "5672"
      RABBITMQ_USERNAME: "root"
      RABBITMQ_PASSWORD: "root"
      RABBIT_CONNECTION: "true"
    networks:
      - services-net

  rabbitmq: 
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - services-net
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "root"
      RABBITMQ_DEFAULT_PASS: "root"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq 

networks:
  services-net:
    driver: bridge
volumes:
  rabbitmq_data: